{"version":3,"sources":["webpack:///./node_modules/graphql/jsutils/devAssert.mjs","webpack:///./node_modules/graphql/jsutils/defineToJSON.mjs","webpack:///./node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/language/printLocation.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/language/kinds.mjs","webpack:///./node_modules/graphql/language/source.mjs","webpack:///./node_modules/graphql/jsutils/defineToStringTag.mjs","webpack:///./node_modules/graphql/language/tokenKind.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/parser.mjs","webpack:///./src/components/bg.js","webpack:///./node_modules/graphql-tag/src/index.js","webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:///./src/components/seo.js"],"names":["devAssert","condition","message","Boolean","Error","defineToJSON","classObject","fn","arguments","length","undefined","prototype","toString","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","i","push","slice","printPrefixedLines","map","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","loc","_locations","_positions","reduce","list","pos","value","_extensions","originalExtensions","Object","defineProperties","this","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","create","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","toStringTag","get","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","kind","next","readToken","Tok","end","prev","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","a","b","c","d","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parse","options","parseDocument","parseValue","parser","expectToken","parseValueLiteral","parseType","type","parseTypeReference","Parser","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","_this","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","args","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","call","endToken","StyledBG","styled","div","theme","backgroundColor","colors","link","BG","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","doc","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","key","valueType","keys","hasOwnProperty","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","console","warn","processFragments","gql","literals","result","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","OperationData","context","isMounted","previousOptions","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","QueryData","_super","_a","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","previousResult","_error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","currentResult","partial","errors","graphQLErrors","partialRefetch","resetQueryStoreErrors","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","Promise","resolve","then","memoFn","ref","memo","queryResult","useQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","info","SEO","lang","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","charSet","content","property","siteUrl","rel","href","defaultProps","meta"],"mappings":"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","file":"d4ad233efeb1d959420253442063e6db7488fdeb-2184d8ca29e3be914712.js","sourcesContent":["export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\n\n\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\n\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n// @internal\n\n\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledBG = styled.div`\n  position: fixed;\n  z-index: -1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.backgroundColor};\n  -webkit-transform: translate3d(0, 0, 0);\n  height: -webkit-fill-available;\n  opacity: 1;\n  background: ${({ theme }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${theme.colors.link} 0%, ${theme.backgroundColor} 100%)`};\n  opacity: 0.15;\n  /* z-index: 9999; */\n  user-select: none;\n  pointer-events: none;\n`\n\nconst BG = () => {\n  return <StyledBG />\n}\nexport default BG\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse; // Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\n\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n} // A map docString -> graphql document\n\n\nvar docCache = {}; // A map fragmentName -> [normalized source]\n\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n} // For testing.\n\n\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n} // Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\n\n\nvar printFragmentWarnings = true;\n\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc); // We know something about this fragment\n\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\" + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\" + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  } // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n\n\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  } // https://github.com/apollographql/graphql-tag/issues/40\n\n\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\n\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, {\n    experimentalFragmentVariables: experimentalFragmentVariables\n  });\n\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  } // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n\n\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n} // XXX This should eventually disallow arbitrary string interpolation, like Relay does\n\n\nfunction gql()\n/* arguments */\n{\n  var args = Array.prototype.slice.call(arguments);\n  var literals = args[0]; // We always get literals[0] and then matching post literals for each arg given\n\n  var result = typeof literals === \"string\" ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n} // Support typescript, which isn't as nice as Babel about default exports\n\n\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\nmodule.exports = gql;","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        onNewData = _a.onNewData;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.onNewData();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.query.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.query.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.query.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.query.subscribeToMore(options);\n    };\n\n    _this.onNewData = onNewData;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    var obs = this.currentObservable.query;\n    var currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n      options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.ssrInitiated = function () {\n    return this.context && this.context.renderPromises;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    var ssrLoading = __assign({\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client\n    }, this.observableQueryFields());\n\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previousData.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (this.ssrInitiated()) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.ssrInitiated() && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign(__assign({}, options), {\n      displayName: displayName,\n      context: options.context,\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    var _a, _b;\n\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.ssrInitiated()) {\n        (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions).catch(function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        _this.onNewData();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n\n          _this.onNewData();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = this.observableQueryFields();\n    var options = this.getOptions();\n\n    if (options.skip) {\n      result = __assign(__assign({}, result), {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      result = __assign(__assign({}, result), {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result && this.previousData.result.data;\n        result.data = previousData && data ? __assign(__assign({}, previousData), data) : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = options.partialRefetch;\n\n        if (partialRefetch && !data && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    this.currentObservable.query && this.currentObservable.query.resetQueryStoreErrors();\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var obsQuery = this.currentObservable.query;\n    if (!obsQuery || !this.previousData.result) return;\n    var _a = this.previousData.result,\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var observable = this.currentObservable.query;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n  var queryData = queryDataRef.current || new QueryData({\n    options: updatedOptions,\n    context: context,\n    onNewData: function onNewData() {\n      if (!queryData.ssrInitiated()) {\n        Promise.resolve().then(forceUpdate);\n      } else {\n        forceUpdate();\n      }\n    }\n  });\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  var memo = {\n    options: __assign(__assign({}, updatedOptions), {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      }).catch(function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, title, path }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const uniTitle = 'LEAD Protocol'\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n    >\n      <meta charSet=\"utf-8\" />\n      <html lang=\"en\" />\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={title}></meta>\n\n      <meta property=\"og:title\" content={uniTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content={'website'} />\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl + path} />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content=\"@Uniswap\"></meta>\n      <meta name=\"twitter:site\" content=\"@Uniswap\" />\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\n\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/rss.xml\" />\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}