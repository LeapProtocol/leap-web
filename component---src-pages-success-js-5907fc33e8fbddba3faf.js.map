{"version":3,"sources":["webpack:///./src/pages/success.js","webpack:///./src/components/bg.js","webpack:///./src/components/seo.js"],"names":["StyledAbout","styled","div","theme","colors","grey2","StyledSectionFlex","wrapSmall","Title","h1","StyledCardBG","Img","shadows","huge","Success","props","data","useStaticQuery","path","location","pathname","nofooter","title","style","flexDirection","paddingBottom","fluid","unicornImage","childImageSharp","width","href","to","StyledBG","backgroundColor","link","BG","SEO","description","lang","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","charSet","name","content","property","siteUrl","rel","type","defaultProps","meta"],"mappings":"+FAAA,iHAQMA,EAAcC,UAAOC,IAAV,uEAAGD,CAAH,wKAQY,qBAAGE,MAAkBC,OAAOC,SAGnDC,EAAoBL,UAAOC,IAAV,6EAAGD,CAAH,ySASD,qBAAGM,UAAsC,SAAR,SAoBjDC,EAAQP,UAAOQ,GAAV,iEAAGR,CAAH,gLAeLS,EAAeT,kBAAOU,KAAV,wEAAGV,CAAH,gHAMF,qBAAGE,MAAkBS,QAAQC,QAsC9BC,UAlCC,SAAAC,GACd,IAAMC,EAAOC,yBAAe,cAY5B,OACE,kBAAC,IAAD,CAAQC,KAAMH,EAAMI,SAASC,SAAUC,UAAU,GAC/C,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,MAAM,UAAUJ,KAAMH,EAAMI,SAASC,WAC1C,kBAACpB,EAAD,KACE,kBAACM,EAAD,CAAmBiB,MAAO,CAAEC,cAAe,SAAUC,cAAe,QAClE,kBAACf,EAAD,CAAcgB,MAAOV,EAAKW,aAAaC,gBAAgBF,QACvD,kBAAClB,EAAD,CAAOe,MAAO,CAAEM,MAAO,SAAvB,2BACA,2BACG,qDACD,uBAAGC,KAAK,8FACL,WAGL,kBAAC,OAAD,CAAMC,GAAG,KAAT,kB,kCCpGV,yBAGMC,EAHN,UAGiB/B,QAAOC,IAAV,mEAAGD,CAAH,2OAOQ,qBAAGE,MAAkB8B,mBAI3B,gBAAG9B,EAAH,EAAGA,MAAH,6CAC2BA,EAAMC,OAAO8B,KADxC,QACoD/B,EAAM8B,gBAD1D,YAWDE,IAHJ,WACT,OAAO,kBAACH,EAAD,Q,kCCvBT,iDAYA,SAASI,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMhB,EAAe,EAAfA,MAAOJ,EAAQ,EAARA,KAC/BqB,EAAStB,yBAAe,cAAxBsB,KAeFC,EAAkBH,GAAeE,EAAKE,aAAaJ,YAGzD,OACE,kBAAC,IAAD,CACEK,eAAgB,CACdJ,QAEFhB,MAAOA,EACPqB,cAAkBJ,EAAKE,aAAanB,MAAvB,SAEb,0BAAMsB,QAAQ,UACd,0BAAMN,KAAK,OACX,0BAAMO,KAAK,QAAQC,QAASxB,IAC5B,0BAAMuB,KAAK,cAAcC,QAASN,IAClC,0BAAMK,KAAK,WAAWC,QAASxB,IAE/B,0BAAMyB,SAAS,WAAWD,QAhBb,kBAiBb,0BAAMC,SAAS,iBAAiBD,QAASN,IACzC,0BAAMO,SAAS,UAAUD,QAAS,YAClC,0BAAMC,SAAS,SAASD,QAASP,EAAKE,aAAaO,QAAU9B,IAC7D,0BAAM6B,SAAS,WAAWD,QAAO,GAAKP,EAAKE,aAAaO,SAAU9B,GAAc,YAA/C,qBAEjC,0BAAM2B,KAAK,eAAeC,QAAQ,wBAClC,0BAAMD,KAAK,kBAAkBC,QAAQ,aACrC,0BAAMD,KAAK,eAAeC,QAAQ,aAClC,0BAAMC,SAAS,WAAWD,QAAO,GAAKP,EAAKE,aAAaO,SAAU9B,GAAc,YAA/C,qBAEjC,0BAAM+B,IAAI,YAAYC,KAAK,sBAAsBpB,KAAK,cAK5DM,EAAIe,aAAe,CACjBb,KAAK,KACLc,KAAM,GACNf,YAAY,IAUCD","file":"component---src-pages-success-js-5907fc33e8fbddba3faf.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport Layout from '../layouts'\r\nimport SEO from '../components/seo'\r\nimport BG from '../components/bg'\r\nimport Img from 'gatsby-image'\r\n\r\nconst StyledAbout = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 4rem;\r\n  margin-bottom: 4rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey2};\r\n`\r\n\r\nconst StyledSectionFlex = styled.div`\r\n  padding: 4rem 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  @media (max-width: 1024px) {\r\n    padding: 1rem;\r\n    margin-top: 0rem;\r\n    flex-direction: ${({ wrapSmall }) => (!wrapSmall ? 'row' : 'column')};\r\n  }\r\n  @media (max-width: 960px) {\r\n    padding: 1rem;\r\n    margin-top: 0rem;\r\n    width: 100%;\r\n    max-width: 450px;\r\n    /* flex-direction: column; */\r\n  }\r\n  h1,\r\n  h2 {\r\n    /* margin-bottom: 0.5rem; */\r\n    max-width: 650px;\r\n  }\r\n  p {\r\n    /* margin-bottom: 0.5rem; */\r\n    max-width: 650px;\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n  /* font-size: 72px; */\r\n  margin: 2rem 0 3rem 0;\r\n  pointer-events: none;\r\n  white-space: wrap;\r\n  overflow-wrap: normal;\r\n  max-width: 900px;\r\n  /* text-align: center; */\r\n  @media (max-width: 960px) {\r\n    font-size: 3rem;\r\n  }\r\n`\r\n\r\nconst StyledCardBG = styled(Img)`\r\n  width: 100%;\r\n  height: 250px;\r\n  background-size: auto;\r\n  background-position: center;\r\n  border-radius: 12px;\r\n  box-shadow: ${({ theme }) => theme.shadows.huge};\r\n  /* z-index: -1; */\r\n`\r\n\r\nconst Success = props => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      unicornImage: file(relativePath: { eq: \"uni_image.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth: 1200) {\r\n            ...GatsbyImageSharpFluid_noBase64\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <Layout path={props.location.pathname} nofooter={true}>\r\n      <BG />\r\n      <SEO title=\"Success\" path={props.location.pathname} />\r\n      <StyledAbout>\r\n        <StyledSectionFlex style={{ flexDirection: 'column', paddingBottom: '0px' }}>\r\n          <StyledCardBG fluid={data.unicornImage.childImageSharp.fluid} />\r\n          <Title style={{ width: '100%' }}>You are now subscribed.</Title>\r\n          <p>\r\n            {\"We'll be in touch soon. You can always unsubscribe\"}\r\n            <a href=\"https://uniswap.us19.list-manage.com/unsubscribe?u=c93471c1443f1e6365b5ca093&id=7d591bff13\">\r\n              {' here.'}\r\n            </a>\r\n          </p>\r\n          <Link to=\"/\">Back home</Link>\r\n        </StyledSectionFlex>\r\n      </StyledAbout>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Success\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledBG = styled.div`\r\n  position: fixed;\r\n  z-index: -1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  -webkit-transform: translate3d(0, 0, 0);\r\n  height: -webkit-fill-available;\r\n  opacity: 1;\r\n  background: ${({ theme }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${theme.colors.link} 0%, ${theme.backgroundColor} 100%)`};\r\n  opacity: 0.15;\r\n  /* z-index: 9999; */\r\n  user-select: none;\r\n  pointer-events: none;\r\n`\r\n\r\nconst BG = () => {\r\n  return <StyledBG />\r\n}\r\nexport default BG\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, title, path }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            siteUrl\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const uniTitle = 'LEAD Protocol'\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang\r\n      }}\r\n      title={title}\r\n      titleTemplate={`${site.siteMetadata.title} | %s`}\r\n    >\r\n      <meta charSet=\"utf-8\" />\r\n      <html lang=\"en\" />\r\n      <meta name=\"title\" content={title} />\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta name=\"keywords\" content={title}></meta>\r\n\r\n      <meta property=\"og:title\" content={uniTitle} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content={'website'} />\r\n      <meta property=\"og:url\" content={site.siteMetadata.siteUrl + path} />\r\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\r\n\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:creator\" content=\"@Uniswap\"></meta>\r\n      <meta name=\"twitter:site\" content=\"@Uniswap\" />\r\n      <meta property=\"og:image\" content={`${site.siteMetadata.siteUrl}${path ? path : '/images/'}twitter-card.jpg`} />\r\n\r\n      <link rel=\"alternate\" type=\"application/rss+xml\" href=\"/rss.xml\" />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}