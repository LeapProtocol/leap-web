{"version":3,"sources":["webpack:///./src/pages/docs/v2/06-smart-contract-integration/05-using-flash-swaps.md"],"names":["name","_frontmatter","Github","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","href","target","rel","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-v-2-06-smart-contract-integration-05-using-flash-swaps-md-06c6657c168eb1c503f3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/yq/Documents/LEAP/leap-web/src/layouts/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Github = makeShortcode(\"Github\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Flash swaps are an integral feature of Uniswap V2. In fact, under the hood, all swaps are actually flash swaps! This simply means that pair contracts send output tokens to the recipient `}<em parentName=\"p\">{`before`}</em>{` enforcing that enough input tokens have been received. This is slightly atypical, as one might expect a pair to ensure it’s received payment before delivery. However, because Ethereum transactions are `}<em parentName=\"p\">{`atomic`}</em>{`, we can roll back the entire swap if it turns out that the contract hasn’t received enough tokens to make itself whole by the end of the transaction.`}</p>\n    <p>{`To see how this all works, let’s start by examining the interface of the `}<inlineCode parentName=\"p\">{`swap`}</inlineCode>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-solidity\"\n      }}>{`function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data);\n`}</code></pre>\n    <p>{`For the sake of example, let’s assume that we’re dealing with a DAI/WETH pair, where DAI is `}<inlineCode parentName=\"p\">{`token0`}</inlineCode>{` and WETH is `}<inlineCode parentName=\"p\">{`token1`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`amount0Out`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`amount1Out`}</inlineCode>{` specify the amount of DAI and WETH that the `}<inlineCode parentName=\"p\">{`msg.sender`}</inlineCode>{` wants the pair to send to the `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` address (one of these amounts may be 0). At this point you may be wondering how the contract `}<em parentName=\"p\">{`receives`}</em>{` tokens. For a typical (non-flash) swap, it’s actually the responsibility of `}<inlineCode parentName=\"p\">{`msg.sender`}</inlineCode>{` to ensure that enough WETH or DAI has `}<em parentName=\"p\">{`already been sent`}</em>{` to the pair before `}<inlineCode parentName=\"p\">{`swap`}</inlineCode>{` is called (in the context of trading, this is all handled neatly by a router contract). But when executing a flash swap, `}<em parentName=\"p\">{`tokens do not need to be sent to the contract before calling `}<inlineCode parentName=\"em\">{`swap`}</inlineCode></em>{`. Instead, they must be sent from within a `}<em parentName=\"p\">{`callback function`}</em>{` that the pair triggers on the `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` address.`}</p>\n    <h1 {...{\n      \"id\": \"triggering-a-flash-swap\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#triggering-a-flash-swap\",\n        \"aria-label\": \"triggering a flash swap permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Triggering a Flash Swap`}</h1>\n    <p>{`To differentiate between the “typical” trading case and the flash swap case, pairs use the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` parameter. Specifically, if `}<inlineCode parentName=\"p\">{`data.length`}</inlineCode>{` equals 0, the contract assumes that payment has already been received, and simply transfers the tokens to the `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` address. But, if `}<inlineCode parentName=\"p\">{`data.length`}</inlineCode>{` is greater than 0, the contract transfers the tokens and then calls the following function on the `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` address:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-solidity\"\n      }}>{`function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data);\n`}</code></pre>\n    <p>{`The logic behind this identification strategy is simple: the vast majority of valid flash swap use cases involve interactions with external protocols. The best way to pass information dictating how these interactions happen (function arguments, safety parameters, addresses, etc.) is via the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` parameter. It’s expected that `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`abi.decode`}</inlineCode>{`d from within `}<inlineCode parentName=\"p\">{`uniswapV2Call`}</inlineCode>{`. In the rare case where no data is required, callers should ensure that `}<inlineCode parentName=\"p\">{`data.length`}</inlineCode>{` equals 1 (i.e. encode a single junk byte as `}<inlineCode parentName=\"p\">{`bytes`}</inlineCode>{`), and then ignore this argument in `}<inlineCode parentName=\"p\">{`uniswapV2Call`}</inlineCode>{`.`}</p>\n    <p>{`Pairs call `}<inlineCode parentName=\"p\">{`uniswapV2Call`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`sender`}</inlineCode>{` argument set to the `}<inlineCode parentName=\"p\">{`msg.sender`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`swap`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`amount0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`amount1`}</inlineCode>{` are simply `}<inlineCode parentName=\"p\">{`amount0Out`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`amount1Out`}</inlineCode>{`.`}</p>\n    <h1 {...{\n      \"id\": \"using-uniswapv2call\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#using-uniswapv2call\",\n        \"aria-label\": \"using uniswapv2call permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Using uniswapV2Call`}</h1>\n    <p>{`There are several conditions that should be checked in all `}<inlineCode parentName=\"p\">{`uniswapV2Call`}</inlineCode>{` functions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-solidity\"\n      }}>{`function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) {\n  address token0 = IUniswapV2Pair(msg.sender).token0(); // fetch the address of token0\n  address token1 = IUniswapV2Pair(msg.sender).token1(); // fetch the address of token1\n  assert(msg.sender == IUniswapV2Factory(factoryV2).getPair(token0, token1)); // ensure that msg.sender is a V2 pair\n  // rest of the function goes here!\n}\n`}</code></pre>\n    <p>{`The first 2 lines simply fetch the token addresses from the pair, and the 3rd ensures that the `}<inlineCode parentName=\"p\">{`msg.sender`}</inlineCode>{` is an actual Uniswap V2 pair address.`}</p>\n    <h1 {...{\n      \"id\": \"repayment\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#repayment\",\n        \"aria-label\": \"repayment permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Repayment`}</h1>\n    <p>{`At the end of `}<inlineCode parentName=\"p\">{`uniswapV2Call`}</inlineCode>{`, contracts must return enough tokens to the pair to make it whole. Specifically, this means that the product of the pair reserves after the swap, discounting all token amounts sent by 0.3% LP fee, must be greater than before.`}</p>\n    <h2 {...{\n      \"id\": \"multi-token\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#multi-token\",\n        \"aria-label\": \"multi token permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Multi-Token`}</h2>\n    <p>{`In the case where the token withdrawn is `}<em parentName=\"p\">{`not`}</em>{` the token returned (i.e. DAI was requested in the flash swap, and WETH was returned, or vice versa), the fee simplifies to the simple swap case. This means that the standard `}<inlineCode parentName=\"p\">{`getAmountIn`}</inlineCode>{` pricing function should be used to calculate e.g., the amount of WETH that must be returned in exchange for the amount of DAI that was requested out.`}</p>\n    <p>{`This type of fee calculation gives a slight advantage to the caller, as the fee derived from repayment in a corresponding token will always be slightly less than the fee derived from a direct token repayment, as a result of the difference between the amount required to pay back a swap, versus the amount withdrawn and then directly returned. The approximate comparison of fees is ~ 30 bps for a swap fee vs. 30.09 bps for a direct repayment.`}</p>\n    <h2 {...{\n      \"id\": \"single-token\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#single-token\",\n        \"aria-label\": \"single token permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Single-Token`}</h2>\n    <p>{`In the case where the token withdrawn is the `}<em parentName=\"p\">{`same`}</em>{` as the token returned (i.e. DAI was requested in the flash swap, used, then returned, or vice versa with WETH), the following condition must be satisfied:`}</p>\n    <p><inlineCode parentName=\"p\">{`DAIReservePre - DAIWithdrawn + (DAIReturned * .997) >= DAIReservePre`}</inlineCode></p>\n    <p>{`It may be more intuitive to rewrite this formula in terms of a “fee” levied on the `}<em parentName=\"p\">{`withdrawn`}</em>{` amount (despite the fact that Uniswap always levies fees on input amounts, in this case the `}<em parentName=\"p\">{`returned`}</em>{` amount, here we can simplify to an effective fee on the `}<em parentName=\"p\">{`withdrawn`}</em>{` amount). If we rearrange, the formula looks like:`}</p>\n    <p><inlineCode parentName=\"p\">{`(DAIReturned * .997) - DAIWithdrawn >= 0`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`DAIReturned >= DAIWithdrawn / .997`}</inlineCode></p>\n    <p>{`So, the effective fee on the withdrawn amount is `}<inlineCode parentName=\"p\">{`.003 / .997 ≈ 0.3009027%`}</inlineCode>{`.`}</p>\n    <h1 {...{\n      \"id\": \"resources\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#resources\",\n        \"aria-label\": \"resources permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Resources`}</h1>\n    <p>{`For further exploration of flash swaps, see the `}<a href='/whitepaper.pdf' target='_blank' rel='noopener noreferrer'>{`whitepaper`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#example\",\n        \"aria-label\": \"example permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Example`}</h1>\n    <p>{`A fully functional example of flash swaps is available: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleFlashSwap.sol\"\n      }}><inlineCode parentName=\"a\">{`ExampleFlashSwap.sol`}</inlineCode></a>{`.`}</p>\n    <Github href=\"https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/examples/ExampleSwapToPrice.sol\" mdxType=\"Github\">ExampleSwapToPrice.sol</Github>\n    <h1 {...{\n      \"id\": \"interface\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#interface\",\n        \"aria-label\": \"interface permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Interface`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-solidity\"\n      }}>{`import '@uniswap/v2-core/contracts/interfaces/IUniswapV2Callee.sol';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-solidity\"\n      }}>{`pragma solidity >=0.5.0;\n\ninterface IUniswapV2Callee {\n  function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}