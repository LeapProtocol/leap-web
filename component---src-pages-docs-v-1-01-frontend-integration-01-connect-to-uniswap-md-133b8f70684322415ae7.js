(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"y3+o":function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return p})),t.d(e,"default",(function(){return m}));var a=t("zLVn"),s=(t("q1tI"),t("7ljp")),o=t("aArQ"),p={},u=function(n){return function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.b)("div",e)}},i=u("Info"),r=u("Link"),c={_frontmatter:p},d=o.a;function m(n){var e=n.components,t=Object(a.a)(n,["components"]);return Object(s.b)(d,Object.assign({},c,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)(i,{mdxType:"Info"},"Uniswap V1, while still fully functional, is no longer under active development. Looking for ",Object(s.b)(r,{style:{display:"contents"},to:"/docs/v2/",mdxType:"Link"},"V2 documentation"),"?"),Object(s.b)("p",null,"The Uniswap smart contracts exist on the Ethereum blockchain. Use ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ethers-io/ethers.js/"},"ethers.js")," or ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ethereum/web3.js"},"web3.js")," to connect your website to Ethereum. Users will need a web3-enabled browser. On desktop this means using the ",Object(s.b)("a",{parentName:"p",href:"https://metamask.io/"},"MetaMask")," extension or something similar. On mobile, web3-compatible browsers include ",Object(s.b)("a",{parentName:"p",href:"https://trustwalletapp.com/"},"Trust Wallet")," and ",Object(s.b)("a",{parentName:"p",href:"https://wallet.coinbase.com/"},"Coinbase Wallet"),". See ",Object(s.b)("a",{parentName:"p",href:"https://ethereum.org/use/#_3-what-is-a-wallet-and-which-one-should-i-use"},"ethereum.org")," to learn more."),Object(s.b)("h1",{id:"factory-contract",style:{position:"relative"}},Object(s.b)("a",{parentName:"h1",href:"#factory-contract","aria-label":"factory contract permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Factory Contract"),Object(s.b)("p",null,"The Uniswap ",Object(s.b)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-v1/blob/master/contracts/uniswap_factory.vy"},"factory contract")," can be used to create exchange contracts for any ERC20 token that does not already have one. It also functions as a registry of ERC20 tokens that have been added to the system, and the exchange with which they are associated."),Object(s.b)("p",null,"The factory contract can be instantiated using the factory address and ABI:"),Object(s.b)("h2",{id:"factory-address",style:{position:"relative"}},Object(s.b)("a",{parentName:"h2",href:"#factory-address","aria-label":"factory address permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),Object(s.b)("a",{parentName:"h2",href:"https://etherscan.io/address/0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95"},"Factory Address")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"// mainnet\nconst factory = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'\n\n// testnets\nconst ropsten = '0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351'\nconst rinkeby = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36'\nconst kovan = '0xD3E51Ef092B2845f10401a0159B2B96e8B6c3D30'\nconst g√∂rli = '0x6Ce570d02D73d4c384b46135E87f8C592A8c86dA'\n")),Object(s.b)("h3",{id:"factory-interface",style:{position:"relative"}},Object(s.b)("a",{parentName:"h3",href:"#factory-interface","aria-label":"factory interface permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Factory Interface"),Object(s.b)("p",null,"Creating the factory interface in web3 requires the ",Object(s.b)("strong",{parentName:"p"},"factory address")," and the ",Object(s.b)("strong",{parentName:"p"},"factory ABI"),":"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const factoryABI = [\n  {\n    name: 'NewExchange',\n    inputs: [\n      { type: 'address', name: 'token', indexed: true },\n      { type: 'address', name: 'exchange', indexed: true }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'initializeFactory',\n    outputs: [],\n    inputs: [{ type: 'address', name: 'template' }],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 35725\n  },\n  {\n    name: 'createExchange',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [{ type: 'address', name: 'token' }],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 187911\n  },\n  {\n    name: 'getExchange',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [{ type: 'address', name: 'token' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 715\n  },\n  {\n    name: 'getToken',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [{ type: 'address', name: 'exchange' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 745\n  },\n  {\n    name: 'getTokenWithId',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [{ type: 'uint256', name: 'token_id' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 736\n  },\n  {\n    name: 'exchangeTemplate',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 633\n  },\n  {\n    name: 'tokenCount',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 663\n  }\n]\n")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const factoryContract = new web3.eth.Contract(factoryABI, factoryAddress)\n")),Object(s.b)("h1",{id:"exchange-contracts",style:{position:"relative"}},Object(s.b)("a",{parentName:"h1",href:"#exchange-contracts","aria-label":"exchange contracts permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Exchange Contracts"),Object(s.b)("h2",{id:"get-exchange-address",style:{position:"relative"}},Object(s.b)("a",{parentName:"h2",href:"#get-exchange-address","aria-label":"get exchange address permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Get Exchange Address"),Object(s.b)("p",null,"There is a separate exchange contract for every ERC20 token. The ",Object(s.b)("inlineCode",{parentName:"p"},"getExchange")," method in the factory contract can be used to find the Ethereum address associated with an ERC20 token address."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const exchangeAddress = factoryContract.methods.getExchange(tokenAddress)\n")),Object(s.b)("p",null,"If the return value is ",Object(s.b)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000")," the token does not yet have an exchange."),Object(s.b)("h2",{id:"exchange-interface",style:{position:"relative"}},Object(s.b)("a",{parentName:"h2",href:"#exchange-interface","aria-label":"exchange interface permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Exchange Interface"),Object(s.b)("p",null,"Creating an exchange interface in web3 requires the ",Object(s.b)("strong",{parentName:"p"},"exchange address")," and the ",Object(s.b)("strong",{parentName:"p"},"exchange ABI"),":"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const exchangeABI = [\n  {\n    name: 'TokenPurchase',\n    inputs: [\n      { type: 'address', name: 'buyer', indexed: true },\n      { type: 'uint256', name: 'eth_sold', indexed: true },\n      { type: 'uint256', name: 'tokens_bought', indexed: true }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'EthPurchase',\n    inputs: [\n      { type: 'address', name: 'buyer', indexed: true },\n      { type: 'uint256', name: 'tokens_sold', indexed: true },\n      { type: 'uint256', name: 'eth_bought', indexed: true }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'AddLiquidity',\n    inputs: [\n      { type: 'address', name: 'provider', indexed: true },\n      { type: 'uint256', name: 'eth_amount', indexed: true },\n      { type: 'uint256', name: 'token_amount', indexed: true }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'RemoveLiquidity',\n    inputs: [\n      { type: 'address', name: 'provider', indexed: true },\n      { type: 'uint256', name: 'eth_amount', indexed: true },\n      { type: 'uint256', name: 'token_amount', indexed: true }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'Transfer',\n    inputs: [\n      { type: 'address', name: '_from', indexed: true },\n      { type: 'address', name: '_to', indexed: true },\n      { type: 'uint256', name: '_value', indexed: false }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'Approval',\n    inputs: [\n      { type: 'address', name: '_owner', indexed: true },\n      { type: 'address', name: '_spender', indexed: true },\n      { type: 'uint256', name: '_value', indexed: false }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'setup',\n    outputs: [],\n    inputs: [{ type: 'address', name: 'token_addr' }],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 175875\n  },\n  {\n    name: 'addLiquidity',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'min_liquidity' },\n      { type: 'uint256', name: 'max_tokens' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: true,\n    type: 'function',\n    gas: 82605\n  },\n  {\n    name: 'removeLiquidity',\n    outputs: [\n      { type: 'uint256', name: 'out' },\n      { type: 'uint256', name: 'out' }\n    ],\n    inputs: [\n      { type: 'uint256', name: 'amount' },\n      { type: 'uint256', name: 'min_eth' },\n      { type: 'uint256', name: 'min_tokens' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 116814\n  },\n  { name: '__default__', outputs: [], inputs: [], constant: false, payable: true, type: 'function' },\n  {\n    name: 'ethToTokenSwapInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'min_tokens' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: true,\n    type: 'function',\n    gas: 12757\n  },\n  {\n    name: 'ethToTokenTransferInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'min_tokens' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' }\n    ],\n    constant: false,\n    payable: true,\n    type: 'function',\n    gas: 12965\n  },\n  {\n    name: 'ethToTokenSwapOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: true,\n    type: 'function',\n    gas: 50455\n  },\n  {\n    name: 'ethToTokenTransferOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' }\n    ],\n    constant: false,\n    payable: true,\n    type: 'function',\n    gas: 50663\n  },\n  {\n    name: 'tokenToEthSwapInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_eth' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 47503\n  },\n  {\n    name: 'tokenToEthTransferInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_eth' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 47712\n  },\n  {\n    name: 'tokenToEthSwapOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'eth_bought' },\n      { type: 'uint256', name: 'max_tokens' },\n      { type: 'uint256', name: 'deadline' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 50175\n  },\n  {\n    name: 'tokenToEthTransferOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'eth_bought' },\n      { type: 'uint256', name: 'max_tokens' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 50384\n  },\n  {\n    name: 'tokenToTokenSwapInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_tokens_bought' },\n      { type: 'uint256', name: 'min_eth_bought' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'token_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 51007\n  },\n  {\n    name: 'tokenToTokenTransferInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_tokens_bought' },\n      { type: 'uint256', name: 'min_eth_bought' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' },\n      { type: 'address', name: 'token_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 51098\n  },\n  {\n    name: 'tokenToTokenSwapOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'max_tokens_sold' },\n      { type: 'uint256', name: 'max_eth_sold' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'token_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 54928\n  },\n  {\n    name: 'tokenToTokenTransferOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'max_tokens_sold' },\n      { type: 'uint256', name: 'max_eth_sold' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' },\n      { type: 'address', name: 'token_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 55019\n  },\n  {\n    name: 'tokenToExchangeSwapInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_tokens_bought' },\n      { type: 'uint256', name: 'min_eth_bought' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'exchange_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 49342\n  },\n  {\n    name: 'tokenToExchangeTransferInput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_sold' },\n      { type: 'uint256', name: 'min_tokens_bought' },\n      { type: 'uint256', name: 'min_eth_bought' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' },\n      { type: 'address', name: 'exchange_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 49532\n  },\n  {\n    name: 'tokenToExchangeSwapOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'max_tokens_sold' },\n      { type: 'uint256', name: 'max_eth_sold' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'exchange_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 53233\n  },\n  {\n    name: 'tokenToExchangeTransferOutput',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'uint256', name: 'tokens_bought' },\n      { type: 'uint256', name: 'max_tokens_sold' },\n      { type: 'uint256', name: 'max_eth_sold' },\n      { type: 'uint256', name: 'deadline' },\n      { type: 'address', name: 'recipient' },\n      { type: 'address', name: 'exchange_addr' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 53423\n  },\n  {\n    name: 'getEthToTokenInputPrice',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'uint256', name: 'eth_sold' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 5542\n  },\n  {\n    name: 'getEthToTokenOutputPrice',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'uint256', name: 'tokens_bought' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 6872\n  },\n  {\n    name: 'getTokenToEthInputPrice',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'uint256', name: 'tokens_sold' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 5637\n  },\n  {\n    name: 'getTokenToEthOutputPrice',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'uint256', name: 'eth_bought' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 6897\n  },\n  {\n    name: 'tokenAddress',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1413\n  },\n  {\n    name: 'factoryAddress',\n    outputs: [{ type: 'address', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1443\n  },\n  {\n    name: 'balanceOf',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'address', name: '_owner' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1645\n  },\n  {\n    name: 'transfer',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_to' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 75034\n  },\n  {\n    name: 'transferFrom',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_from' },\n      { type: 'address', name: '_to' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 110907\n  },\n  {\n    name: 'approve',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_spender' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 38769\n  },\n  {\n    name: 'allowance',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_owner' },\n      { type: 'address', name: '_spender' }\n    ],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1925\n  },\n  {\n    name: 'name',\n    outputs: [{ type: 'bytes32', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1623\n  },\n  {\n    name: 'symbol',\n    outputs: [{ type: 'bytes32', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1653\n  },\n  {\n    name: 'decimals',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1683\n  },\n  {\n    name: 'totalSupply',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1713\n  }\n]\n")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const exchangeContract = new web3.eth.Contract(exchangeABI, exchangeAddress)\n")),Object(s.b)("h1",{id:"token-contracts",style:{position:"relative"}},Object(s.b)("a",{parentName:"h1",href:"#token-contracts","aria-label":"token contracts permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Token Contracts"),Object(s.b)("p",null,"Some Uniswap interactions require making calls directly to ERC20 token contracts rather than the exchanges with which they are associated."),Object(s.b)("h2",{id:"get-token-address",style:{position:"relative"}},Object(s.b)("a",{parentName:"h2",href:"#get-token-address","aria-label":"get token address permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Get Token Address"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"getToken")," method in the factory contract can be used to find the ERC20 token address associated with an exchange contract. There is no barrier of entry for adding an ERC20 token to Uniswap or checks on the validity of the token contracts. Frontend interfaces should maintain a list of valid ERC20 tokens that users can safely trade or allow users to paste in arbitrary addresses."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const tokenAddress = factoryContract.methods.getToken(exchangeAddress)\n")),Object(s.b)("p",null,"If the return value is ",Object(s.b)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000")," the input address is not a Uniswap exchange."),Object(s.b)("h2",{id:"token-interface",style:{position:"relative"}},Object(s.b)("a",{parentName:"h2",href:"#token-interface","aria-label":"token interface permalink",className:"anchor before"},Object(s.b)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Token Interface"),Object(s.b)("p",null,"Creating a token interface in web3 requires the ",Object(s.b)("strong",{parentName:"p"},"token address")," and the ",Object(s.b)("strong",{parentName:"p"},"token ABI"),":"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const tokenABI = [\n  {\n    name: 'Transfer',\n    inputs: [\n      { type: 'address', name: '_from', indexed: true },\n      { type: 'address', name: '_to', indexed: true },\n      { type: 'uint256', name: '_value', indexed: false }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: 'Approval',\n    inputs: [\n      { type: 'address', name: '_owner', indexed: true },\n      { type: 'address', name: '_spender', indexed: true },\n      { type: 'uint256', name: '_value', indexed: false }\n    ],\n    anonymous: false,\n    type: 'event'\n  },\n  {\n    name: '__init__',\n    outputs: [],\n    inputs: [\n      { type: 'bytes32', name: '_name' },\n      { type: 'bytes32', name: '_symbol' },\n      { type: 'uint256', name: '_decimals' },\n      { type: 'uint256', name: '_supply' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'constructor'\n  },\n  { name: 'deposit', outputs: [], inputs: [], constant: false, payable: true, type: 'function', gas: 74279 },\n  {\n    name: 'withdraw',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [{ type: 'uint256', name: '_value' }],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 108706\n  },\n  {\n    name: 'totalSupply',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 543\n  },\n  {\n    name: 'balanceOf',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [{ type: 'address', name: '_owner' }],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 745\n  },\n  {\n    name: 'transfer',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_to' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 74698\n  },\n  {\n    name: 'transferFrom',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_from' },\n      { type: 'address', name: '_to' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 110600\n  },\n  {\n    name: 'approve',\n    outputs: [{ type: 'bool', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_spender' },\n      { type: 'uint256', name: '_value' }\n    ],\n    constant: false,\n    payable: false,\n    type: 'function',\n    gas: 37888\n  },\n  {\n    name: 'allowance',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [\n      { type: 'address', name: '_owner' },\n      { type: 'address', name: '_spender' }\n    ],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 1025\n  },\n  {\n    name: 'name',\n    outputs: [{ type: 'bytes32', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 723\n  },\n  {\n    name: 'symbol',\n    outputs: [{ type: 'bytes32', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 753\n  },\n  {\n    name: 'decimals',\n    outputs: [{ type: 'uint256', name: 'out' }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 783\n  }\n]\n")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"const tokenContract = new web3.eth.Contract(tokenABI, tokenAddress)\n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-v-1-01-frontend-integration-01-connect-to-uniswap-md-133b8f70684322415ae7.js.map